{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\khush\\\\OneDrive\\\\Desktop\\\\InfoCrucible\\\\frontend\\\\client\\\\src\\\\pages\\\\NewsVerificationPage.js\",\n  _s = $RefreshSig$();\n// src/pages/NewsVerificationPage.js\nimport React, { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport LoadingSpinner from '../components/common/LoadingSpinner';\nimport './NewsVerificationPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NewsVerificationPage() {\n  _s();\n  const {\n    encodedArticleUrl\n  } = useParams();\n  const [articleUrl, setArticleUrl] = useState('');\n  const [isLoading, setIsLoading] = useState(true);\n  const [verificationResult, setVerificationResult] = useState(null);\n  const [errorMessage, setErrorMessage] = useState('');\n  useEffect(() => {\n    // Decode the URL parameter when the component mounts or parameter changes\n    if (encodedArticleUrl) {\n      try {\n        const decodedUrl = decodeURIComponent(encodedArticleUrl);\n        setArticleUrl(decodedUrl);\n        setIsLoading(true);\n        setVerificationResult(null);\n        setErrorMessage('');\n        console.log(`Initiating verification for: ${decodedUrl}`);\n        const verifyNewsOnBackend = async urlToVerify => {\n          try {\n            await new Promise(resolve => setTimeout(resolve, 2500)); // Simulate network delay\n\n            const simulatedResult = Math.random() > 0.4 ? 'real' : 'fake';\n            if (Math.random() < 0.1) throw new Error(\"Simulated network error during verification.\"); // Simulate error sometimes\n            console.log(\"Simulated verification result:\", simulatedResult);\n            setVerificationResult(simulatedResult);\n          } catch (error) {\n            console.error(\"Verification API call failed:\", error);\n            setErrorMessage(error.message || \"Could not verify the news article.\");\n            setVerificationResult('error');\n          } finally {\n            setIsLoading(false);\n          }\n        };\n        verifyNewsOnBackend(decodedUrl);\n        // -----------------------------------------------\n      } catch (error) {\n        console.error(\"Error decoding URL:\", error);\n        setErrorMessage(\"Invalid article URL provided.\");\n        setVerificationResult('error');\n        setIsLoading(false);\n      }\n    } else {\n      // Handle case where parameter is missing (shouldn't happen with correct routing)\n      setErrorMessage(\"Article URL parameter is missing.\");\n      setVerificationResult('error');\n      setIsLoading(false);\n    }\n  }, [encodedArticleUrl]); // Re-run effect if the encoded URL changes\n\n  // --- Helper function to render result message ---\n  const renderResultMessage = () => {\n    if (isLoading) return null; // No message while loading\n    if (verificationResult === 'error') {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"verification-status status-error\",\n        children: [\"\\u26A0\\uFE0F Error: \", errorMessage]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 14\n      }, this);\n    }\n    if (verificationResult === 'real') {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"verification-status status-real\",\n        children: \"\\u2705 Verified as likely REAL news.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 14\n      }, this);\n    }\n    if (verificationResult === 'fake') {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"verification-status status-fake\",\n        children: \"\\u274C Verified as likely FAKE news.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 14\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"verification-status status-pending\",\n      children: \"Verification status unknown.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 12\n    }, this); // Fallback\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"verification-page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"News Verification\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), articleUrl ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"article-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Verifying article from:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: articleUrl,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        className: \"article-link\",\n        children: articleUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this) :\n    // Show error if URL couldn't be decoded or wasn't provided\n    !isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"verification-status status-error\",\n      children: \"Could not load article URL.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"verification-result-area\",\n      children: [isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-area\",\n        children: [/*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Verifying, please wait...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), renderResultMessage()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      className: \"back-link\",\n      children: \"\\u2190 Back to Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n_s(NewsVerificationPage, \"1F2N6jiIkziqq+vEz0MRkv75uUc=\", false, function () {\n  return [useParams];\n});\n_c = NewsVerificationPage;\nexport default NewsVerificationPage;\nvar _c;\n$RefreshReg$(_c, \"NewsVerificationPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Link","LoadingSpinner","jsxDEV","_jsxDEV","NewsVerificationPage","_s","encodedArticleUrl","articleUrl","setArticleUrl","isLoading","setIsLoading","verificationResult","setVerificationResult","errorMessage","setErrorMessage","decodedUrl","decodeURIComponent","console","log","verifyNewsOnBackend","urlToVerify","Promise","resolve","setTimeout","simulatedResult","Math","random","Error","error","message","renderResultMessage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","href","target","rel","to","_c","$RefreshReg$"],"sources":["C:/Users/khush/OneDrive/Desktop/InfoCrucible/frontend/client/src/pages/NewsVerificationPage.js"],"sourcesContent":["// src/pages/NewsVerificationPage.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport LoadingSpinner from '../components/common/LoadingSpinner'; \r\nimport './NewsVerificationPage.css'; \r\n\r\nfunction NewsVerificationPage() {\r\n  \r\n  const { encodedArticleUrl } = useParams();\r\n  const [articleUrl, setArticleUrl] = useState('');\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [verificationResult, setVerificationResult] = useState(null); \r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    // Decode the URL parameter when the component mounts or parameter changes\r\n    if (encodedArticleUrl) {\r\n      try {\r\n        const decodedUrl = decodeURIComponent(encodedArticleUrl);\r\n        setArticleUrl(decodedUrl);\r\n      \r\n        setIsLoading(true);\r\n        setVerificationResult(null);\r\n        setErrorMessage('');\r\n\r\n   \r\n        console.log(`Initiating verification for: ${decodedUrl}`);\r\n       \r\n        const verifyNewsOnBackend = async (urlToVerify) => {\r\n          try {\r\n            \r\n            await new Promise(resolve => setTimeout(resolve, 2500)); // Simulate network delay\r\n        \r\n            const simulatedResult = Math.random() > 0.4 ? 'real' : 'fake';\r\n             if (Math.random() < 0.1) throw new Error(\"Simulated network error during verification.\"); // Simulate error sometimes\r\n            console.log(\"Simulated verification result:\", simulatedResult);\r\n            setVerificationResult(simulatedResult);\r\n         \r\n\r\n          } catch (error) {\r\n            console.error(\"Verification API call failed:\", error);\r\n            setErrorMessage(error.message || \"Could not verify the news article.\");\r\n            setVerificationResult('error');\r\n          } finally {\r\n            setIsLoading(false);\r\n          }\r\n        };\r\n\r\n        verifyNewsOnBackend(decodedUrl);\r\n        // -----------------------------------------------\r\n\r\n      } catch (error) {\r\n        console.error(\"Error decoding URL:\", error);\r\n        setErrorMessage(\"Invalid article URL provided.\");\r\n        setVerificationResult('error');\r\n        setIsLoading(false);\r\n      }\r\n    } else {\r\n       // Handle case where parameter is missing (shouldn't happen with correct routing)\r\n       setErrorMessage(\"Article URL parameter is missing.\");\r\n       setVerificationResult('error');\r\n       setIsLoading(false);\r\n    }\r\n  }, [encodedArticleUrl]); // Re-run effect if the encoded URL changes\r\n\r\n  // --- Helper function to render result message ---\r\n  const renderResultMessage = () => {\r\n    if (isLoading) return null; // No message while loading\r\n    if (verificationResult === 'error') {\r\n      return <p className=\"verification-status status-error\">⚠️ Error: {errorMessage}</p>;\r\n    }\r\n    if (verificationResult === 'real') {\r\n      return <p className=\"verification-status status-real\">✅ Verified as likely REAL news.</p>;\r\n    }\r\n    if (verificationResult === 'fake') {\r\n      return <p className=\"verification-status status-fake\">❌ Verified as likely FAKE news.</p>;\r\n    }\r\n    return <p className=\"verification-status status-pending\">Verification status unknown.</p>; // Fallback\r\n  };\r\n\r\n  return (\r\n    <div className=\"verification-page-container\">\r\n      <h1>News Verification</h1>\r\n      {articleUrl ? (\r\n        <div className=\"article-info\">\r\n          <p>Verifying article from:</p>\r\n          {/* Link to the original article */}\r\n          <a href={articleUrl} target=\"_blank\" rel=\"noopener noreferrer\" className=\"article-link\">\r\n            {articleUrl}\r\n          </a>\r\n        </div>\r\n      ) : (\r\n         // Show error if URL couldn't be decoded or wasn't provided\r\n         !isLoading && <p className=\"verification-status status-error\">Could not load article URL.</p>\r\n      )}\r\n\r\n\r\n      <div className=\"verification-result-area\">\r\n        {isLoading && (\r\n          <div className=\"loading-area\">\r\n            <LoadingSpinner />\r\n            <p>Verifying, please wait...</p>\r\n          </div>\r\n        )}\r\n        {renderResultMessage()}\r\n      </div>\r\n\r\n      {/* Button to go back to the homepage */}\r\n      <Link to=\"/\" className=\"back-link\">\r\n        ← Back to Home\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewsVerificationPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}